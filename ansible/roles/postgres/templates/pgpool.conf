backend_clustering_mode = 'streaming_replication'
listen_addresses = '*'
port = 9900
socket_dir = '/tmp'
reserved_connections = 1 
pcp_listen_addresses = '*'
pcp_port = 9800
pcp_socket_dir = '/tmp'
listen_backlog_multiplier = 2
serialize_accept = off

backend_hostname0 = '{{ node1_alias }}'
backend_port0 = 5432
backend_weight0 = 1
backend_data_directory0 = '{{ postgres_folders.data_dir }}'
backend_flag0 = 'ALLOW_TO_FAILOVER'
backend_application_name0 = '{{ node1_alias }}'

{% for key, value in temp_map.items() |sort(attribute='1') %}
backend_hostname{{ loop.index0 + 1 }} = '{{ value }}'
backend_port{{ loop.index0 + 1 }} = 5432
backend_weight{{ loop.index0 + 1 }} = 1
backend_data_directory{{ loop.index0 + 1 }} = '{{ postgres_folders.data_dir }}'
backend_flag{{ loop.index0 + 1 }} = 'ALLOW_TO_FAILOVER'
backend_application_name{{ loop.index0 + 1 }} = '{{ value }}'
{% endfor %}

enable_pool_hba = off
pool_passwd = '{{ pgpool_folders.conf_dir }}/pool_passwd'
authentication_timeout = 60
allow_clear_text_frontend_auth = off

ssl = on
ssl_ca_cert = '{{ pgpool_folders.conf_dir }}/ca_chain.pem'
ssl_cert = '{{ pgpool_folders.conf_dir }}/server.crt'
ssl_key = '{{ pgpool_folders.conf_dir }}/server.key'
ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL' # allowed SSL ciphers
ssl_prefer_server_ciphers = on
ssl_passphrase_command = 'echo "{{ postgres_ssl_cert_passphrase }}"'
num_init_children = 512 
max_pool = 1 

child_life_time = 300
child_max_connections = 0
connection_life_time = 0
client_idle_limit = 0
log_destination = 'stderr'
log_connections = off
log_hostname = off
log_statement = off
log_per_node_statement = off
log_client_messages = off
log_standby_delay = 'if_over_threshold'
syslog_facility = 'LOCAL0'
syslog_ident = 'pgpool'
pid_file_name = '/applis/{{ app_id }}/pgpool/pgpool.pid'
logdir = '{{ pgpool_folders.logs_dir }}'
connection_cache = on
reset_query_list = 'ABORT; DISCARD ALL'
replication_mode = off
replicate_select = off
insert_lock = off
lobj_lock_table = ''
replication_stop_on_mismatch = off
failover_if_affected_tuples_mismatch = off
load_balance_mode = on 
ignore_leading_white_space = on
white_function_list = ''
black_function_list = 'currval,lastval,nextval,setval'
black_query_pattern_list = ''
database_redirect_preference_list = ''
app_name_redirect_preference_list = ''
allow_sql_comments = off
disable_load_balance_on_write = 'transaction'
statement_level_load_balance = off
master_slave_mode = on
master_slave_sub_mode = 'stream'
sr_check_period = 10
sr_check_user = 'pgpool'
sr_check_password = ''
sr_check_database = '{{ app_id }}'
delay_threshold = 10000000 
follow_master_command = ''
health_check_period = 5
health_check_timeout = 30
health_check_user = 'pgpool'
health_check_password = ''
health_check_database = '{{ app_id }}'
health_check_max_retries = 3 
health_check_retry_delay = 1
connect_timeout = 10000
failover_command = '{{ pgpool_folders.conf_dir }}/failover.sh %d %h %p %D %m %H %M %P %r %R %N %S'
failback_command = ''
failover_on_backend_error = on
detach_false_primary = off
search_primary_node_timeout = 300
recovery_user = 'postgres'
recovery_password = ''
recovery_1st_stage_command = 'recovery_1st_stage'   
recovery_2nd_stage_command = ''
recovery_timeout = 90
client_idle_limit_in_recovery = 0
auto_failback = on
auto_failback_interval = 60
use_watchdog = on
trusted_servers = ''
ping_path = '/bin'

wd_ipc_socket_dir = '/tmp'

delegate_IP = '{{ (postgres_cluster_nodes_fips_map|dict2items|selectattr("key", "match", "postgres-fip-"~pgpool_node_id~"-.*")|list|first).value }}'

if_cmd_path = '/sbin'
if_up_cmd = '/usr/bin/sudo /sbin/ip addr add {{ (postgres_cluster_nodes_fips_map|dict2items|selectattr("key", "match", "postgres-fip-"~pgpool_node_id~"-.*")|list|first).value }}/21 dev ens3 label ens3:99'
if_down_cmd = '/usr/bin/sudo /sbin/ip addr del {{ (postgres_cluster_nodes_fips_map|dict2items|selectattr("key", "match", "postgres-fip-"~pgpool_node_id~"-.*")|list|first).value }}/21 dev ens3'
arping_path = '/usr/sbin'
arping_cmd = '/usr/bin/sudo /usr/sbin/arping -U {{ (postgres_cluster_nodes_fips_map|dict2items|selectattr("key", "match", "postgres-fip-"~pgpool_node_id~"-.*")|list|first).value }} -w 1 -I ens3'
clear_memqcache_on_escalation = on
wd_escalation_command = ''
wd_de_escalation_command = ''
failover_when_quorum_exists = on
failover_require_consensus = on
allow_multiple_failover_requests_from_node = off
enable_consensus_with_half_votes = off
wd_lifecheck_method = 'heartbeat'
wd_interval = 10
wd_heartbeat_port = 9694
wd_heartbeat_keepalive = 2
wd_heartbeat_deadtime = 30

{% for key, value in postgres_cluster_nodes_alias_map.items()|sort(attribute='1') %}
wd_port{{ loop.index0 }} = 9000
heartbeat_hostname{{ loop.index0 }} = '{{ value }}'
heartbeat_port{{ loop.index0 }} = 9694
heartbeat_device{{ loop.index0 }} = 'ens3'
hostname{{ loop.index0 }} = '{{ value }}'
pgpool_port{{ loop.index0 }} = 9900
{% endfor %}

relcache_expire = 0
relcache_size = 256
check_temp_table = catalog
check_unlogged_table = on
enable_shared_relcache = on
memory_cache_enabled = off
memqcache_method = 'shmem'
memqcache_memcached_host = 'localhost'
memqcache_memcached_port = 11211
memqcache_total_size = 67108864
memqcache_max_num_cache = 1000000
memqcache_expire = 0
memqcache_auto_cache_invalidation = on
memqcache_maxcache = 409600
memqcache_cache_block_size = 1048576
memqcache_oiddir = '{{ pgpool_folders.oid_dir }}'

log_destination = 'stderr'
logging_collector = on
log_directory = '{{ pgpool_folders.logs_dir }}'
log_filename = 'pgpool-%Y-%m-%d_%H%M%S.log'
log_truncate_on_rotation = on
log_rotation_age = 1d
log_rotation_size = 10MB